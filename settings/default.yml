api:
  access_token_long_validity_days: 7
  access_token_short_validity_minutes: 30
  access_token_scopes: {}
  superuser_access_token_scopes: {}
  signup:
    approve: false
    notify-email: andreas@7scientists.com
encryption:
  key: XE4F8OjzloQ7cPBdJoW94-trXF2sc2cHINoGf_aAhbc=
debug: true
test: false
date_format: '%Y-%m-%d'
db:
  url: postgresql://worf:worf@localhost/worf_development
  echo: false
crossdomain:
  enabled: false
  max-age: 86400 #1 day
plugins:
  billing:
    module: worf.plugins.billing
    depends_on: [organizations]
    schedule:
      worf.plugins.billing.tasks.process_events:
        schedule:
          crontab:
            minute: '*/10' # execute every 10 minutes
      worf.plugins.billing.tasks.run_maintenance_tasks:
        schedule:
          crontab:
            minute: '*/10' # execute every 10 minutes
  features:
    module: worf.plugins.features
  gitlab:
    module: worf.plugins.gitlab
  github:
    module: worf.plugins.github
  google:
    module: worf.plugins.google
  password:
    module: worf.plugins.password
  organizations:
    module: worf.plugins.organizations
organizations:
  roles: [superuser, admin, member]
worker:
  type: thread
  config:
#    broker_url: "amqp://worf:worf@localhost:5672/worf"
#    result_backend: "amqp://worf:worf@localhost:5672/worf"
#    broker_connection_timeout: 2.0
#    task_serializer: json
#    accept_content: ['json']
#    result_serializer: json
#    timezone: Europe/Berlin
#    enable_utc: true
#    worker_hijack_root_logger: false
#    task_default_queue: tasks
#    task_queues:
#      - {name: tasks, routing_key: 'tasks'}
#    task_default_exchange: recipes
#    task_track_started: true
#    task_default_exchange_type: topic
#    task_default_routing_key: task.default
#    worker_max_tasks_per_child: 1
#    worker_concurrency: 15
#    worker_prefetch_multiplier: 1
#    task_acks_late: true
#    task_ignore_result: false
#    result_expires: 1200
  schedule: {}
#    test:
#     task: worf.worker.tasks.ping.ping
#     schedule:
#       timedelta:
#         minutes: 1
smtp:
  from: worf@enterprise.fed
url: http://localhost:5000
frontend:
  paths:
    v1:
      confirm_signup: confirm-signup
      reset_password: reset-password
      change_email: change-email
      block_email: block-email
      signup: signup
  url: http://localhost:8080 #this is the frontend base URL (e.g. for e-mail change etc.)
templates:
  paths: 
    0001_base: "{cwd}/templates"
  context:
    security_officer:
      email: Security Officer E-Mail
    service:
      name: Service Name
      url: Service URL
    company:
      bank_account:
        iban: DE0000000000000000
        bic: COBADEFFXXX
        bank: Commerzbank AG
      team: Team Name
      name: Company Name
      city: Company City
      street: Company Street
      zip_code: Company Zip Code
      email:  Company E-Mail
      billing_email:  Company Billing E-Mail
      url: Company URL
      phone: Company Phone
languages: [en]
